---
# tasks file for roles/containerd_conf
- name: Ensure overlay and br_netfilter modules are loaded
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/containerd.conf
    line: "{{ item }}"
    create: true
    mode: '0644'
  with_items:
    - overlay
    - br_netfilter

- name: Load overlay and br_netfilter modules
  community.general.modprobe:
    name: "{{ item }}"
  with_items:
    - overlay
    - br_netfilter

- name: Set system configurations for Kubernetes networking
  ansible.builtin.copy:
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
      net.bridge.bridge-nf-call-ip6tables = 1
    mode: '0644'

- name: Apply new sysctl settings
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: true
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.ipv4.ip_forward
    - net.bridge.bridge-nf-call-ip6tables

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true

- name: Ensure /etc/containerd directory exists
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Check if containerd configuration file exists
  ansible.builtin.stat:
    path: /etc/containerd/config.toml
  register: containerd_config_stat

- name: Generate default containerd configuration
  ansible.builtin.template:
    src: containerd-config.toml.j2
    dest: /etc/containerd/config.toml
    mode: '0644'
  when: not containerd_config_stat.stat.exists

- name: Restart containerd service
  ansible.builtin.systemd:
    name: containerd
    state: restarted

- name: Verify containerd service status
  ansible.builtin.systemd:
    name: containerd
    state: started
    enabled: true
